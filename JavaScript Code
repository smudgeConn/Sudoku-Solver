function sudoku(puzzle) {
    const findEmpty = (puzzle) => {
        for (let row = 0; row < 9; row++) {
            for (let col = 0; col < 9; col++) {
                if (puzzle[row][col] === 0) {
                    return [row, col];
                }
            }
        }
        return null;
    };

    const validate = (num, pos, puzzle) => {
        const [row, col] = pos;

        // Check row
        for (let i = 0; i < 9; i++) {
            if (puzzle[row][i] === num && col !== i) {
                return false;
            }
        }

        // Check column
        for (let i = 0; i < 9; i++) {
            if (puzzle[i][col] === num && row !== i) {
                return false;
            }
        }

        // Check box
        const boxRow = Math.floor(row / 3) * 3;
        const boxCol = Math.floor(col / 3) * 3;

        for (let i = boxRow; i < boxRow + 3; i++) {
            for (let j = boxCol; j < boxCol + 3; j++) {
                if (puzzle[i][j] === num && i !== row && j !== col) {
                    return false;
                }
            }
        }

        return true;
    };

    const solve = () => {
        const currentPos = findEmpty(puzzle);

        if (currentPos === null) {
            return true;
        }

        for (let i = 1; i < 10; i++) {
            const currentNum = i;
            const isValid = validate(currentNum, currentPos, puzzle);

            if (isValid) {
                const [x, y] = currentPos;
                puzzle[x][y] = currentNum;

                if (solve()) {
                    return true;
                }

                puzzle[x][y] = 0;
            }
        }

        return false;
    };

    solve();
    return puzzle;
}
var puzzle = [
    [5,3,0,0,7,0,0,0,0],
    [6,0,0,1,9,5,0,0,0],
    [0,9,8,0,0,0,0,6,0],
    [8,0,0,0,6,0,0,0,3],
    [4,0,0,8,0,3,0,0,1],
    [7,0,0,0,2,0,0,0,6],
    [0,6,0,0,0,0,2,8,0],
    [0,0,0,4,1,9,0,0,5],
    [0,0,0,0,8,0,0,7,9]];

console.log(sudoku(puzzle))
